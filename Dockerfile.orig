# Stage 1: Build the Next.js application
FROM node:18-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json (if present)
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install

# Copy the entire project directory to the container
COPY . .

# Build the Next.js application
RUN npm run build

# Stage 2: Create a new stage for the final production image
FROM node:18-alpine

# Set the working directory inside the container
WORKDIR /app

# Install inotify-tools if needed
RUN apk add --no-cache inotify-tools

# Create a non-root user and group
RUN addgroup -g 1001 -S nodejs && adduser -u 1001 -S nextjs -G nodejs

# Copy .env file if needed (uncomment the line below if .env is required)
# COPY .env .env

# Copy all files and directories from the builder stage
COPY --from=builder /app/ .

# Set permissions recursively for the .next directory
RUN chown -R nextjs:nodejs /app/.next && chmod -R 755 /app/.next

# Ensure the images directory has the correct ownership and permissions
RUN chown -R nextjs:nodejs /app/public/assets/images
RUN chmod -R u+rwX,g+rwX,o-rwx /app/public/assets/images

# Expose the port Next.js uses (usually 3000)
EXPOSE 3000

# Command to run the Next.js production server
CMD ["npm", "start"]

