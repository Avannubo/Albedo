server {
    listen 80;
    server_name albedo.avannubo.com;

    location / {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



# <VirtualHost *:80>
#     ServerName www.new.albedo.biz
#     ServerAlias new.albedo.biz

#     # Proxy settings
#     ProxyPreserveHost On
#     ProxyPass / http://localhost:32768/
#     ProxyPassReverse / http://localhost:32768/

#     # Allow access to the proxy
#     <Proxy http://localhost:32771/>
#         Order allow,deny
#         Allow from all
#     </Proxy>

#     # Set headers for logging real IP addresses
#     Header always set X-Real-IP "%{REMOTE_ADDR}s"
#     Header always set X-Forwarded-For "%{HTTP_X_FORWARDED_FOR}s"

#     # Alias for serving uploaded images
#     Alias /uploads/ "/var/www/uploads/"

#     <Directory /var/www/uploads>
#         Options Indexes FollowSymLinks
#         AllowOverride None
#         Require all granted
#     </Directory>

#     # Log files
#     ErrorLog ${APACHE_LOG_DIR}/new_albedo_error.log
#     CustomLog ${APACHE_LOG_DIR}/new_albedo_access.log combined
# </VirtualHost>


# # Stage 1: Build the Next.js application
# FROM node:18-alpine AS builder

# # Set the working directory inside the container
# WORKDIR /app

# # Copy package.json and package-lock.json (if present)
# COPY package*.json ./

# # Install dependencies
# RUN npm install

# # Copy the entire project directory to the container
# COPY . .

# # Build the Next.js application
# RUN npm run build

# # Stage 2: Create a new stage for the final production image
# FROM node:18-alpine

# # Set the working directory inside the container
# WORKDIR /app

# # Install inotify-tools
# RUN apk add --no-cache inotify-tools

# # Copy .env file if needed (uncomment the line below if .env is required)
# # COPY .env .env

# # Copy only the necessary files from the builder stage
# COPY --from=builder /app/package*.json ./
# COPY --from=builder /app/.next ./.next
# COPY --from=builder /app/public ./public
# COPY --from=builder /app/next.config.mjs ./
# COPY --from=builder /app/node_modules ./node_modules

# # Copy the watch script to the container
# COPY watch_uploads.sh /app/watch_uploads.sh
# RUN chmod +x /app/watch_uploads.sh

# # Set specific permissions instead of 777 for security reasons
# RUN chmod -R 755 ./

# # Expose the port Next.js uses (usually 3000)
# EXPOSE 3000

# # Command to run the Next.js production server and the watcher script
# CMD ["sh", "-c", "/app/watch_uploads.sh & npm start"]

